{"ast":null,"code":"var _jsxFileName = \"/Users/tanghuayi/Downloads/bookfinder-app 2/src/screens/home/containers/Books.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty';\nimport Spinner from 'react-bootstrap/Spinner';\nimport BookCard from '../components/BookCard';\n\nconst renderBooksList = (data, query) => {\n  if (isEmpty(data)) {\n    return null;\n  }\n\n  let books = data.items,\n      totalItems = data.totalItems;\n  return React.createElement(React.Fragment, null, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Search results for: \", query), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Total results: \", totalItems), React.createElement(\"div\", {\n    className: \"books-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, books.map(book => React.createElement(BookCard, {\n    key: book.id,\n    book: book,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }))));\n};\n\nconst Books = ({\n  data,\n  isFetching,\n  query,\n  error\n}) => {\n  let jsxStr = '';\n\n  if (isFetching) {\n    jsxStr = React.createElement(\"div\", {\n      style: {\n        display: 'block',\n        marginTop: '2rem',\n        marginBottom: '2rem',\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Spinner, {\n      animation: \"border\",\n      style: {\n        animation: '0.5ms linear infinite anim-rotate',\n        borderBottom: '2px solid transparent',\n        borderLeft: '2px solid #d3014c',\n        borderRadius: '50%',\n        borderRight: '2px solid transparent',\n        borderTop: '2px solid #d3014c',\n        boxSizing: 'border-box',\n        height: 100,\n        width: 100,\n        display: 'block',\n        marginLeft: 'auto',\n        marginRight: 'auto'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }));\n  } else if (!isEmpty(error)) {\n    jsxStr = JSON.stringify(error);\n  } else {\n    jsxStr = renderBooksList(data, query);\n  }\n\n  return React.createElement(\"div\", {\n    className: \"books\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, jsxStr);\n};\n\nconst mapStateToProps = state => {\n  let _state$books = state.books,\n      data = _state$books.data,\n      isFetching = _state$books.isFetching,\n      query = _state$books.query,\n      error = _state$books.error;\n  return {\n    data,\n    isFetching,\n    query,\n    error\n  };\n};\n\nexport default connect(mapStateToProps, null)(Books);","map":{"version":3,"sources":["/Users/tanghuayi/Downloads/bookfinder-app 2/src/screens/home/containers/Books.js"],"names":["React","connect","isEmpty","Spinner","BookCard","renderBooksList","data","query","books","items","totalItems","map","book","id","Books","isFetching","error","jsxStr","display","marginTop","marginBottom","width","animation","borderBottom","borderLeft","borderRadius","borderRight","borderTop","boxSizing","height","marginLeft","marginRight","JSON","stringify","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty'\nimport Spinner from 'react-bootstrap/Spinner';\nimport BookCard from '../components/BookCard'\n\nconst renderBooksList = (data, query) => {\n  if (isEmpty(data)) {\n    return null;\n  }\n  let { items: books, totalItems } = data;\n  return (\n    <>\n      <h3>Search results for: {query}</h3>\n      <p>Total results: {totalItems}</p>\n      <div className=\"books-list\">\n        {books.map(book => <BookCard key={book.id} book={book} />)}\n      </div>\n    </>\n  )\n}\n\n\nconst Books = ({ data, isFetching, query, error }) => {\n  let jsxStr = ''\n\n  if (isFetching) {\n    jsxStr = (\n      <div\n        style={{\n          display: 'block',\n          marginTop: '2rem',\n          marginBottom: '2rem',\n          width: '100%',\n        }}\n      >\n        <Spinner animation='border' style={{\n          animation: '0.5ms linear infinite anim-rotate',\n          borderBottom: '2px solid transparent',\n          borderLeft: '2px solid #d3014c',\n          borderRadius: '50%',\n          borderRight: '2px solid transparent',\n          borderTop: '2px solid #d3014c',\n          boxSizing: 'border-box',\n          height: 100,\n          width: 100,\n          display: 'block',\n          marginLeft: 'auto',\n          marginRight: 'auto',\n        }} />\n    </div>\n\n    )\n  } else if (!isEmpty(error)) {\n    jsxStr = JSON.stringify(error)\n  } else {\n    jsxStr = renderBooksList(data, query);\n  }\n  return (\n    <div className=\"books\">\n      {jsxStr}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  let { data, isFetching, query, error } = state.books\n  return {\n    data,\n    isFetching,\n    query,\n    error\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(Books);"]},"metadata":{},"sourceType":"module"}