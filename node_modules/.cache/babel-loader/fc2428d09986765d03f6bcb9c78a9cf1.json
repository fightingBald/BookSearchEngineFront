{"ast":null,"code":"var _jsxFileName = \"/Users/tanghuayi/Downloads/bookfinder-app 2/src/screens/home/containers/Books.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport isEmpty from \"lodash/isEmpty\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport BookCard from \"../components/BookCard\";\n\nconst renderBooksList = (data, query) => {\n  if (isEmpty(data)) {\n    console.log(\"data is empty\");\n    return null;\n  }\n\n  let books = data.results,\n      counts = data.counts;\n  console.log(books);\n  return React.createElement(React.Fragment, null, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Search results for: \", query), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Total results: \", counts), React.createElement(\"div\", {\n    className: \"books-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, books.map(book => React.createElement(BookCard\n  /* \t\t\t\t\t\tkey={book.id} */\n  , {\n    book: book,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }))));\n};\n\nconst Books = ({\n  data,\n  isFetching,\n  query,\n  error\n}) => {\n  let jsxStr = \"\";\n\n  if (isFetching) {\n    jsxStr = React.createElement(\"div\", {\n      style: {\n        display: \"block\",\n        marginTop: \"2rem\",\n        marginBottom: \"2rem\",\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Spinner, {\n      animation: \"border\",\n      style: {\n        animation: \"0.5ms linear infinite anim-rotate\",\n        borderBottom: \"2px solid transparent\",\n        borderLeft: \"2px solid #d3014c\",\n        borderRadius: \"50%\",\n        borderRight: \"2px solid transparent\",\n        borderTop: \"2px solid #d3014c\",\n        boxSizing: \"border-box\",\n        height: 100,\n        width: 100,\n        display: \"block\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }));\n  } else if (!isEmpty(error)) {\n    jsxStr = JSON.stringify(error);\n  } else {\n    jsxStr = renderBooksList(data, query);\n    console.log(jsxStr);\n  }\n\n  return React.createElement(\"div\", {\n    className: \"books\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, jsxStr);\n};\n\nconst mapStateToProps = state => {\n  let _state$books = state.books,\n      data = _state$books.data,\n      isFetching = _state$books.isFetching,\n      query = _state$books.query,\n      error = _state$books.error;\n  return {\n    data,\n    isFetching,\n    query,\n    error\n  };\n};\n\nexport default connect(mapStateToProps, null)(Books);","map":{"version":3,"sources":["/Users/tanghuayi/Downloads/bookfinder-app 2/src/screens/home/containers/Books.js"],"names":["React","connect","isEmpty","Spinner","BookCard","renderBooksList","data","query","console","log","books","results","counts","map","book","Books","isFetching","error","jsxStr","display","marginTop","marginBottom","width","animation","borderBottom","borderLeft","borderRadius","borderRight","borderTop","boxSizing","height","marginLeft","marginRight","JSON","stringify","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport isEmpty from \"lodash/isEmpty\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport BookCard from \"../components/BookCard\";\n\nconst renderBooksList = (data, query) => {\n\tif (isEmpty(data)) {\n\t\tconsole.log(\"data is empty\");\n\t\treturn null;\n\t}\n\tlet { results: books, counts } = data;\n\tconsole.log(books);\n\treturn (\n\t\t<>\n\t\t\t<h3>Search results for: {query}</h3>\n\t\t\t<p>Total results: {counts}</p>\n\t\t\t<div className=\"books-list\">\n\t\t\t\t{books.map((book) => (\n\t\t\t\t\t<BookCard\n\t\t\t\t\t\t/* \t\t\t\t\t\tkey={book.id} */\n\t\t\t\t\t\tbook={book}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nconst Books = ({ data, isFetching, query, error }) => {\n\tlet jsxStr = \"\";\n\n\tif (isFetching) {\n\t\tjsxStr = (\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tdisplay: \"block\",\n\t\t\t\t\tmarginTop: \"2rem\",\n\t\t\t\t\tmarginBottom: \"2rem\",\n\t\t\t\t\twidth: \"100%\",\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Spinner\n\t\t\t\t\tanimation=\"border\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tanimation: \"0.5ms linear infinite anim-rotate\",\n\t\t\t\t\t\tborderBottom: \"2px solid transparent\",\n\t\t\t\t\t\tborderLeft: \"2px solid #d3014c\",\n\t\t\t\t\t\tborderRadius: \"50%\",\n\t\t\t\t\t\tborderRight: \"2px solid transparent\",\n\t\t\t\t\t\tborderTop: \"2px solid #d3014c\",\n\t\t\t\t\t\tboxSizing: \"border-box\",\n\t\t\t\t\t\theight: 100,\n\t\t\t\t\t\twidth: 100,\n\t\t\t\t\t\tdisplay: \"block\",\n\t\t\t\t\t\tmarginLeft: \"auto\",\n\t\t\t\t\t\tmarginRight: \"auto\",\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t} else if (!isEmpty(error)) {\n\t\tjsxStr = JSON.stringify(error);\n\t} else {\n\t\tjsxStr = renderBooksList(data, query);\n\t\tconsole.log(jsxStr);\n\t}\n\treturn <div className=\"books\">{jsxStr}</div>;\n};\n\nconst mapStateToProps = (state) => {\n\tlet { data, isFetching, query, error } = state.books;\n\treturn {\n\t\tdata,\n\t\tisFetching,\n\t\tquery,\n\t\terror,\n\t};\n};\n\nexport default connect(mapStateToProps, null)(Books);\n"]},"metadata":{},"sourceType":"module"}